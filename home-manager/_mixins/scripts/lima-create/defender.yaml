images:
- location: "https://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-amd64.img"
  arch: "x86_64"
- location: "https://cloud-images.ubuntu.com/releases/22.04/release/ubuntu-22.04-server-cloudimg-arm64.img"
  arch: "aarch64"
mounts:
- location: "~"
- location: "/tmp/lima"
  writable: true
containerd:
  system: false
  user: false
disk: "64GiB"
rosetta:
  enabled: true
provision:
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if [ ! -e /etc/apt-cacher-ng/zzz_local.conf ]; then
      hostnamectl hostname defender
      export DEBIAN_FRONTEND=noninteractive
      apt-get -y update
      apt-get -y dist-upgrade
      snap refresh
      apt-get -y install apt-cacher-ng
      echo "DlMaxRetries: 32"       | tee -a /etc/apt-cacher-ng/zzz_local.conf
      echo "PassThroughPattern: .*" | tee -a /etc/apt-cacher-ng/zzz_local.conf
      systemctl restart apt-cacher-ng
    fi
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! command -v germinate; then
      export DEBIAN_FRONTEND=noninteractive
      apt-get -y install --no-install-recommends \
        build-essential \
        curl \
        debootstrap \
        debhelper \
        devscripts \
        germinate
    fi
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! command -v snapcraft; then
      snap install lxd --channel=latest/stable
      #Add the user to the lxd group
      getent group lxd | grep -qwF "{{.User}}" || usermod -aG lxd "{{.User}}"
      snap install snapcraft --classic
    fi
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! command -v jekyll; then
      export DEBIAN_FRONTEND=noninteractive
      apt-get -y install --no-install-recommends \
        ruby \
        ruby-dev \
        make \
        g++ \
        gcc \
        python3-polib \
        python3-requests \
        python3-yaml \
        rsync \
        translate-toolkit \
        transmission-cli \
        webp \
        zlib1g-dev
      gem install bundler --version 2.2.16
      gem install html-proofer
      gem install jekyll
    fi
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if ! command -v tailscale; then
      curl -fsSL https://tailscale.com/install.sh | sh
    fi
- mode: system
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if [ ! -e /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh ]; then
      curl -sSfL https://install.determinate.systems/nix | sh -s -- install \
        --determinate --no-confirm
    fi
- mode: user
  script: |
    #!/bin/bash
    set -eux -o pipefail
    if [ ! -e {{.Home}}/.nix-profile/manifest.nix ]; then
      . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
      git clone --quiet https://github.com/wimpysworld/nix-config "{{.Home}}/Zero/nix-config"
      # Configure sops-nix
      if [ -e "/home/{{.User}}/.config/sops/age/keys.txt" ]; then
        mkdir -p "{{.Home}}/.config/sops/age"
        cp "/home/{{.User}}/.config/sops/age/keys.txt" "{{.Home}}/.config/sops/age/keys.txt"
      fi
      # Activate home-manager configuration
      pushd "{{.Home}}/Zero/nix-config"
      nix run nixpkgs#home-manager -- switch --flake "{{.Home}}/Zero/nix-config" -L
      if [ -e "{{.Home}}/.config/sops/age/keys.txt" ]; then
        gpg-restore
      fi
      popd
    fi
- mode: user
  script: |
    #!/bin/bash
    set -eux -o pipefail
    grep -q fish "{{.Home}}/.bashrc" && exit 0
    git clone --quiet https://github.com/ubuntu-mate/ubuntu-mate.org.git "{{.Home}}/ubuntu-mate.org"
    pushd "{{.Home}}/ubuntu-mate.org"
    bundle install
    git remote set-url origin git@github.com:ubuntu-mate/ubuntu-mate.org.git
    popd
    echo "nix --version"              | tee -a "{{.Home}}/.bashrc"
    echo "determinate-nixd --version" | tee -a "{{.Home}}/.bashrc"
    echo "determinate-nixd status"    | tee -a "{{.Home}}/.bashrc"
    echo "$(which fish) --login"      | tee -a "{{.Home}}/.bashrc"
    echo "exit"                       | tee -a "{{.Home}}/.bashrc"
probes:
- description: "apt-cacher-ng"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until command -v apt-cacher-ng >/dev/null 2>&1; do sleep 5; done"; then
      echo >&2 "apt-cacher-ng is not installed yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
- description: "devtools"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until command -v germinate >/dev/null 2>&1; do sleep 5; done"; then
      echo >&2 "devtools is not installed yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
- description: "snapcraft"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until command -v snapcraft >/dev/null 2>&1; do sleep 5; done"; then
      echo >&2 "snapcraft is not installed yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
- description: "jekyll"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until command -v jekyll >/dev/null 2>&1; do sleep 5; done"; then
      echo >&2 "jekyll is not installed yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
- description: "tailscale"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until command -v tailscale >/dev/null 2>&1; do sleep 5; done"; then
      echo >&2 "tailscale is not installed yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
- description: "determinate-nixd"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until command -v determinate-nixd >/dev/null 2>&1; do sleep 5; done"; then
      echo >&2 "determinate-nixd is not installed yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
- description: "home-manager"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until command -v home-manager >/dev/null 2>&1; do sleep 5; done"; then
      echo >&2 "home-manager is not installed yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
- description: "user environment"
  script: |
    #!/bin/bash
    set -euo pipefail
    if ! timeout 30s bash -c "until test -f /var/lib/gems/3.0.0/gems/jekyll-polyglot-1.4.0/lib/jekyll-polyglot.rb; do sleep 5; done"; then
      echo >&2 "user environment is not configured yet"
      exit 1
    fi
  hint: |
    See "/var/log/cloud-init-output.log" in the guest
message: |
  Run the following commands to complete the setup:
  ------
  determinate-nixd login
  atuin login -u <username>
  atuin sync -f
  sudo tailscale up --operator="${USER}"
  ------
